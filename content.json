{"meta":{"title":"ISP Blog","subtitle":"","description":"","author":"John Doe","url":"https://yhj16.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2023-03-22T09:00:35.003Z","updated":"2023-03-22T07:17:41.091Z","comments":false,"path":"/404.html","permalink":"https://yhj16.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2023-03-22T07:17:41.092Z","updated":"2023-03-22T07:17:41.092Z","comments":false,"path":"about/index.html","permalink":"https://yhj16.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2023-03-22T07:17:41.093Z","updated":"2023-03-22T07:17:41.093Z","comments":false,"path":"books/index.html","permalink":"https://yhj16.github.io/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2023-03-22T07:17:41.094Z","updated":"2023-03-22T07:17:41.094Z","comments":true,"path":"links/index.html","permalink":"https://yhj16.github.io/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-03-22T07:17:41.093Z","updated":"2023-03-22T07:17:41.093Z","comments":false,"path":"categories/index.html","permalink":"https://yhj16.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-03-22T08:59:10.670Z","updated":"2023-03-22T07:17:41.095Z","comments":false,"path":"tags/index.html","permalink":"https://yhj16.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2023-03-22T07:32:37.132Z","updated":"2023-03-22T07:17:41.094Z","comments":false,"path":"repository/index.html","permalink":"https://yhj16.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"[题解]Disk Tree","date":"2023-04-12T06:43:58.875Z","updated":"2023-04-12T06:43:59.022Z","comments":true,"path":"2023/04/12/[题解]Disk Tree/","link":"","permalink":"https://yhj16.github.io/2023/04/12/[%E9%A2%98%E8%A7%A3]Disk%20Tree/","excerpt":"","text":"P1381.Disk Tree 题解题目思路 我们先对所有路径进行排序； 然后将路径中的文件夹提取出来； 跳过重叠目录并输出； 我们模拟一下样例： 1234567897WINNT\\SYSTEM32\\CONFIGGAMESWINNT\\DRIVERSHOMEWIN\\SOFTGAMES\\DRIVERSWINNT\\SYSTEM32\\CERTSRV\\CERTCO~1\\X86 第一步排序： 1234567GAMESGAMES\\DRIVERSHOMEWIN\\SOFTWINNT\\DRIVERSWINNT\\SYSTEM32\\CERTSRV\\CERTCO~1\\X86WINNT\\SYSTEM32\\CONFIG 第二步提取字符串： 1234567GAMESGAMES DRIVERSHOMEWIN SOFTWINNT DRIVERSWINNT SYSTEM32 CERTSRV CERTCO~1 X86WINNT SYSTEM32 CONFIG 第三步跳过重叠目录并输出： 123456789101112GAMES DRIVERSHOMEWIN SOFTWINNT DRIVERS SYSTEM32 CERTSRV CERTCO~1 X86 CONFIG 代码 我们再结合代码看看！ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; long long n; cin&gt;&gt;n; string a[n]; for(long long i=0;i&lt;n;i++) &#123; cin&gt;&gt;a[i]; long long len=a[i].size(); for(long long j=0;j&lt;len;j++) &#123; if(a[i][j]==&#x27;\\\\&#x27;) &#123; a[i][j]=&#x27; &#x27;; &#125; &#125; &#125; sort(a,a+n);//排序 deque&lt;string&gt; num[n]; for(long long i=0;i&lt;n;i++) &#123; string x; stringstream sin(a[i]);//提取字符串 while(sin&gt;&gt;x) &#123; num[i].push_back(x); &#125; &#125; long long len=num[0].size(); for(long long i=0;i&lt;len;i++)//输出部分 &#123; cout&lt;&lt;string(i,&#x27; &#x27;)&lt;&lt;num[0][i]&lt;&lt;endl; &#125; for(long long i=1;i&lt;n;i++) &#123; long long start=0,len=min(num[i-1].size(),num[i].size()); while(start&lt;len &amp;&amp; num[i][start]==num[i-1][start])//跳过重叠目录 &#123; start++; &#125; len=num[i].size(); for(long long j=start;j&lt;len;j++)//输出剩余部分 &#123; cout&lt;&lt;string(j,&#x27; &#x27;)&lt;&lt;num[i][j]&lt;&lt;endl; &#125; &#125; return 0;&#125; 做得那么辛苦（6小时30分），点个赞呗！","categories":[],"tags":[]},{"title":"博客简介","slug":"博客简介","date":"2023-03-23T07:27:26.092Z","updated":"2023-03-23T07:28:50.251Z","comments":true,"path":"2023/03/23/博客简介/","link":"","permalink":"https://yhj16.github.io/2023/03/23/%E5%8D%9A%E5%AE%A2%E7%AE%80%E4%BB%8B/","excerpt":"","text":"","categories":[],"tags":[]}],"categories":[],"tags":[]}